-- local capabilities = vim.lsp.protocol.make_client_capabilities()
-- local cmp = require("cmp")

-- local function bind(op, outer_opts)
--     outer_opts = outer_opts or {noremap = true}
--     return function(lhs, rhs, opts)
--         opts = vim.tbl_extend("force",
--             outer_opts,
--             opts or {}
--         )
--         vim.keymap.set(op, lhs, rhs, opts)
--     end
-- end

-- local nnoremap = bind("n")
-- local inoremap = bind("i")
-- cmp.setup({
-- 	snippet = {
-- 		expand = function(args)
-- 			-- For `vsnip` user.
-- 			-- vim.fn["vsnip#anonymous"](args.body)

-- 			-- For `luasnip` user.
-- 			require("luasnip").lsp_expand(args.body)

-- 			-- For `ultisnips` user.
-- 			-- vim.fn["UltiSnips#Anon"](args.body)
-- 		end,
-- 	},
-- 	sources = {
-- 		{ name = "luasnip" },
-- 	},
-- })

-- local function config(_config)
-- 	return vim.tbl_deep_extend("force", {
-- 		capabilities = require("cmp_nvim_lsp").update_capabilities(vim.lsp.protocol.make_client_capabilities()),

-- 		on_attach = function(client)
-- 			nnoremap("gd", function() vim.lsp.buf.definition() end)
-- 			nnoremap("K", function() vim.lsp.buf.hover() end)
-- 			inoremap("<C-h>", function() vim.lsp.buf.signature_help() end)
--       -- client.resolved_capabilities.document_formatting = false
-- 		end,
-- 	}, _config or {})
-- end

-- capabilities.textDocument.completion.completionItem.snippetSupport = true
-- require("lspconfig").tsserver.setup(config())
-- require("lspconfig").ccls.setup(config())
-- require("lspconfig").jedi_language_server.setup(config())
-- require("lspconfig").svelte.setup(config())
-- require("lspconfig").solang.setup(config())
-- require("lspconfig").cssls.setup(config())
-- require("lspconfig").gopls.setup(config({
-- 	cmd = { "gopls", "serve" },
-- 	settings = {
-- 		gopls = {
-- 			analyses = {
-- 				unusedparams = true,
-- 			},
-- 			staticcheck = true,
-- 		},
-- 	},
-- }))
-- require'lspconfig'.sumneko_lua.setup {
--   settings = {
--     Lua = {
--       runtime = {
--         version = 'LuaJIT',
--       },
--       diagnostics = {
--         globals = {'vim'},
--       },
--       workspace = {
--         library = vim.api.nvim_get_runtime_file("", true),
--       },
--       telemetry = {
--         enable = false,
--       },
--     },
--   },
-- }
-- require("null-ls").setup({
--     sources = {
--         require("null-ls").builtins.formatting.stylua,
--         require("null-ls").builtins.diagnostics.eslint,
--         require("null-ls").builtins.completion.spell,
--     },
-- })
